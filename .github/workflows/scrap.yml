name: Scrap showtimes

on:
  workflow_dispatch:
    inputs:
      days:
        default: 90
        type: number
        description: Days
        required: true
  schedule:
    - cron: '0 2 * * *'

jobs:
  scrap-showtimes:
    name: Scrap showtimes
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl ssh console -a cinecal -C "node ./build/cli scrapShowtimes ${{ inputs.days || 90 }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '20.6.0'
      #     cache: 'npm'
      # - run: npm ci
      # - run: npx prisma generate

      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - run: flyctl proxy 5432:5432 -a cinecal-db &
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      # - run: npx tsx ./cli scrapShowtimes ${{ inputs.days || 90 }}
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}

  # scrap-ticketing:
  #   name: Scrap Ticketing
  #   needs: [scrap-showtimes]
  #   # runs-on: self-hosted
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl ssh console -a cinecal -C "node ./build/cli scrapTicketing"
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  #     # - uses: actions/setup-node@v2
  #     #   with:
  #     #     node-version: '20.6.0'
  #     #     cache: 'npm'
  #     # - run: npm ci
  #     # - run: npx prisma generate

  #     # - uses: superfly/flyctl-actions/setup-flyctl@master
  #     # - run: flyctl proxy 5432:5432 -a cinecal-db &
  #     #   env:
  #     #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #     # - run: npx tsx ./cli scrapTicketing
  #     #   env:
  #     #     DATABASE_URL: ${{ secrets.DATABASE_URL }}

  scrap-posters:
    name: Scrap Posters
    needs: [scrap-showtimes]
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl ssh console -a cinecal -C "node ./build/cli scrapPosters"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '20.6.0'
      #     cache: 'npm'
      # - run: npm ci
      # - run: npx prisma generate

      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - run: flyctl proxy 5432:5432 -a cinecal-db &
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      # - run: npx tsx ./cli scrapPosters
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     IMAGEKIT_API_KEY: ${{ secrets.IMAGEKIT_API_KEY }}

  save-poster-blur-hashes:
    name: Save BlurHashes
    needs: [scrap-posters]
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl ssh console -a cinecal -C "node ./build/cli savePosterBlurHashes"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '20.6.0'
      #     cache: 'npm'
      # - run: npm ci
      # - run: npx prisma generate

      # - uses: superfly/flyctl-actions/setup-flyctl@master
      # - run: flyctl proxy 5432:5432 -a cinecal-db &
      #   env:
      #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      # - run: npx tsx ./cli savePosterBlurHashes
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
